mysql_init:
  image:
    repository: monasca/mysql-init
    tag: 1.1.0
    pullPolicy: IfNotPresent
  disable_remote_root: true
  randon_password: true

influx_init:
  image:
    repository: monasca/influxdb-init
    tag: latest
    pullPolicy: IfNotPresent

grafana_init:
  image:
    repository: monasca/grafana-init
    tag: latest
    pullPolicy: Always
  log_level: INFO
  username: mini-mon
  password: password
  datasource:
    type: monasca
    access_mode: proxy

influxdb:
  image:
    repo: "influxdb"
    tag: "1.1"
    pullPolicy: IfNotPresent
  service:
    type: NodePort
  persistence:
    enabled: false
    storageClass: gluster-heketi # Set to storage being used
    accessMode: ReadWriteOnce
    size: 100Gi
  resources:
    requests:
      memory: 256Mi
      cpu: 0.1
    limits:
      memory: 16Gi
      cpu: 8
  config:
    http:
      bind_address: 8086

mysql:
  imageTag: "5.6"
  mysqlRootPassword: "secretmysql"
  mysqlDatabase: "mon"
  imagePullPolicy: IfNotPresent
  persistence:
    enabled: false
    storageClass: gluster-heketi
    accessMode: ReadWriteOnce
    size: 10Gi
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 500m

agent:
  name: agent
  image:
    repository: monasca/agent
    tag: latest
    pullPolicy: Always
  log_level: WARN
  keystone:
    os_username: mini-mon
    os_user_domain_name: Default
    os_password: password
    os_project_name: mini-mon
    os_project_domain_name: Default
  prometheus:
    auto_detect_pod_endpoints: true
    auto_detect_service_endpoints: true
    kubernetes_labels: 'app'
    timeout: 3
  kubernetes_api:
    kubernetes_labels: 'app'
    timeout: 3
    storage:
      report: true
  kubernetes:
    kubernetes_labels: 'app'
    timeout: 3
  cadvisor:
    enabled: true
    timeout: 3
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m

api:
  name: api
  image:
    repository: monasca/api
    tag: master-prometheus
    pullPolicy: Always
  replicaCount: 1
  keystone:
    admin_password: secretadmin
    admin_user: admin
    admin_tenant: admin
  mysql:
    user: monapi
    password: password
  influxdb:
    user: mon_api
    password: password
    database: mon
  service:
    port: 8070
    type: ClusterIP
  logging:
    log_level_root: WARN
    log_level_console: WARN
  auth_disabled: false
  side_container:
    enabled: true
    image:
      repository: timothyb89/monasca-sidecar
      tag: 1.0.0
      pullPolicy: Always
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
      limits:
        memory: 256Mi
        cpu: 100m
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 2000m

forwarder:
  name: forwarder
  enabled: false
  image:
    repository: monasca/forwarder
    tag: master
    pullPolicy: Always
  replicaCount: 1
  logging:
    debug: false
    verbose: true
  config:
    remote_api_url: http://monasca:8070/v2.0
    monasca_project_id: 3564760a3dd44ae9bd6618d442fd758c
    use_insecure: false
    monasca_role: monasca-agent
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 100m
  metric_configuration:
    forwarder_metric_match.yml: |
      metrics_to_forward:
        - name: kubernetes.node.allocatable.cpu_agg
        - name: cpu.total_time_sec_agg

grafana:
  name: grafana
  image:
    repository: monasca/grafana
    tag: 4.1.0-pre1-1.0.0
    pullPolicy: Always
  service:
    name: grafana
    type: NodePort
    port: 3000
  resources:
    requests:
      memory: 64Mi
      cpu: 50m
    limits:
      memory: 128Mi
      cpu: 100m

kafka:
  name: kafka
  exporter:
    enabled: false
    image:
      repositry: rbrndt/kafka-prometheus
      tag: latest
      pullPolicy: IfNotPresent
    port: 7204
  image:
    repository: monasca/kafka
    tag: 0.9.0.1-2.11
    pullPolicy: IfNotPresent
  topic_config: segment.ms=900000
  service:
    type: ClusterIP
    port: 9092
  resources:
    requests:
      memory: 1Gi
      cpu: 250m
    limits:
      memory: 2Gi
      cpu: 2000m
  persistence:
    storageClass: gluster-heketi
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi

keystone:
  name: keystone
  bootstrap:
    user: admin
    password: secretadmin
    project: admin
    role: admin
    service: keystone
    region: RegionOne
  database_backend: mysql
  image:
    pullPolicy: Always
    tag: 1.0.7
    repository: monasca/keystone
  mysql:
    user: keystone
    password: keystone
    database: keystone
  replicaCount: 1
  service:
    type: ClusterIP
    port: 35357
    admin_port: 5000
  users:
    mini_mon:
      password: password
    monasca_agent:
      password: password
    admin:
      password: secretadmin
    demo:
      password: secretadmin
    monasca_read_only:
      password: password
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 500m

notification:
  name: notification
  image:
    repository: monasca/notification
    tag: master
    pullPolicy: Always
  replicaCount: 1
  mysql:
    user: notification
    password: password
  log_level: WARN
  plugins: pagerduty,webhook
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 100m

persister:
  name: persister
  image:
    repository: monasca/persister
    tag: master
    pullPolicy: Always
  replicaCount: 1
  influxdb:
    user: mon_persister
    password: password
    database: mon
  logging:
    debug: false
    verbose: true
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 100m

thresh:
  name: thresh
  storm_name: storm
  image:
    storm:
      repository: timothyb89/storm
      tag: 1.0.2.4
      pullPolicy: Always
    thresh:
      repository: rbrndt/monasca-thresh
      tag: latest
      pullPolicy: Always
  mysql:
    user: thresh
    password: password
  persistence:
    storageClass: gluster-heketi
    enabled: false
    accessMode: ReadWriteOnce
    size: 4Gi
  service:
    nimbus:
      type: ClusterIP
      port: 6627
  spout:
    metricSpoutThreads: 2
    metricSpoutTasks: 2
  nimbus_resources:
    requests:
      memory: 512Mi
      cpu: 100m
    limits:
      memory: 2Gi
      cpu: 500m
  supervisor_resources:
    requests:
      memory: 2Gi
      cpu: 500m
    limits:
      memory: 4Gi
      cpu: 2000m

zookeeper:
  name: zookeeper
  image:
    repository: zookeeper
    tag: 3.3
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 2181
  persistence:
    storageClass: gluster-heketi
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
  resources:
    requests:
      memory: 384Mi
      cpu: 100m
    limits:
      # library/zookeeper doesn't have a configurable heap size, so no memory
      # limit for now
      cpu: 1000m

client:
  name: client
  enabled: false
  image:
    repository: rbrndt/python-monascaclient
    tag: latest
    pullPolicy: Always
  keystone:
    os_username: mini-mon
    os_user_domain_name: Default
    os_password: password
    os_project_name: mini-mon
    os_project_domain_name: Default

rbac:
  enabled: false

aggregation:
  enabled: true
  name: aggregation
  image:
    repository: rbrndt/test-agg
    tag: latest
    pullPolicy: Always
  window_size: 10
  window_lag: 2
  metric_configuration:
     aggregation-specifications.yaml: |
      aggregationSpecifications:
        - name: namespaceCPUtotal_sec
          aggregatedMetricName: namespace.cpu.total_time_sec
          filteredMetricName: pod.cpu.total_time_sec
          function: avg
          groupedDimensions:
            - namespace
            - pod_name
          rollup:
            function: sum
            groupedDimensions:
              - namespace

        - name: namespaceMemoryUsedBytes
          aggregatedMetricName: namespace.mem.used_bytes
          filteredMetricName: pod.mem.used_bytes
          function: avg
          groupedDimensions:
            - namespace
            - pod_name
          rollup:
            function: sum
            groupedDimensions:
              - namespace

        - name: namespaceNetowrkInBytes
          aggregatedMetricName: namespace.net.in_bytes
          filteredMetricName: pod.net.in_bytes
          function: avg
          groupedDimensions:
            - namespace
            - pod_name
          rollup:
            function: sum
            groupedDimensions:
              - namespace

        - name: namespaceNetowrkOutBytes
          aggregatedMetricName: namespace.net.out_bytes
          filteredMetricName: pod.net.out_bytes
          function: avg
          groupedDimensions:
            - namespace
            - pod_name
          rollup:
            function: sum
            groupedDimensions:
              - namespace

        - name: totalCPUallocatable
          aggregatedMetricName: kubernetes.allocatable.cpu
          filteredMetricName: kubernetes.node.allocatable.cpu
          function: max
          groupedDimensions:
            - hostname
          rollup:
            function: sum

        - name: totalCPU
          aggregatedMetricName: kubernetes.cpu.total_time_sec
          filteredMetricName: pod.cpu.total_time_sec
          function: avg
          groupedDimensions:
            - pod_name
          rollup:
            function: sum

        - name: totalMemAllocatable
          aggregatedMetricName: kubernetes.allocatable.memory_bytes
          filteredMetricName: kubernetes.node.allocatable.memory_bytes
          function: max
          groupedDimensions:
            - hostname
          rollup:
            function: sum

        - name: totalMemBytes
          aggregatedMetricName: kubernetes.used_memory_bytes
          filteredMetricName: mem.used_bytes
          function: avg
          groupedDimensions:
            - hostname
          rollup:
            function: sum

        - name: totalNetworkInBytes
          aggregatedMetricName: kubernetes.net.in_bytes
          filteredMetricName: net.in_bytes
          function: max
          groupedDimensions:
            - hostname
            - interface
          rollup:
            function: sum

        - name: totalNetworkOutBytes
          aggregatedMetricName: kubernetes.net.out_bytes
          filteredMetricName: net.out_bytes
          function: max
          groupedDimensions:
            - hostname
            - interface
          rollup:
            function: sum
