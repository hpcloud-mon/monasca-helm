---
apiVersion: v1
kind: Service
metadata:
  name: "{{ printf "%s-kafka-broker" .Release.Name | trunc 63 }}"
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/created": {{.Release.Time.Seconds | quote }}
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 9092
  clusterIP: None
  selector:
    app: {{ template "fullname" . }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "fullname" . }}
  annotations:
    "helm.sh/created": {{.Release.Time.Seconds | quote }}
spec:
  ports:
  - port: 9092
  selector:
    app: {{ template "fullname" . }}
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/created": {{.Release.Time.Seconds | quote }}
spec:
  serviceName: "{{ printf "%s-kafka-broker" .Release.Name | trunc 63 }}"
  replicas: {{ default 3 .Values.Replicas }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
        ]'
    spec:
      containers:
      - name: "{{ printf "%s-broker" .Release.Name | trunc 63 }}"
        image: "{{.Values.image.repository}}:{{.Values.image.tag}}"
        imagePullPolicy: "{{.Values.image.pullPolicy}}"
        livenessProbe:
          exec:
            command:
              - kafka/bin/kafka-topics.sh
              - --zookeeper
              - "{{ .Release.Name }}-zookeeper:{{ .Values.zookeeper.service.port }}"
              - --list
          initialDelaySeconds: 60
          timeoutSeconds: 10
        name: liveness
        readinessProbe:
          exec:
            command:
              - kafka/bin/kafka-topics.sh
              - --zookeeper
              - "{{ .Release.Name }}-zookeeper:{{ .Values.zookeeper.service.port }}"
              - --list
          initialDelaySeconds: 60
          timeoutSeconds: 10
        name: readiness
        ports:
        - containerPort: 9092
          name: kafka
        resources:
          limits:
            cpu: "{{ .Values.resources.limits.cpu }}"
            memory: "{{ .Values.resources.limits.memory }}"
          requests:
            cpu: "{{ .Values.resources.requests.cpu }}"
            memory: "{{ .Values.resources.requests.memory }}"
        env:
          - name: ZOOKEEPER_CONNECTION_STRING
            value: "{{ .Release.Name }}-zookeeper:{{ .Values.zookeeper.service.port }}"
          - name: KAFKA_BROKER_ID_FROM_HOSTNAME
            value: "true"
          - name: KAFKA_DELETE_TOPIC_ENABLE
            value: "true"
          - name: KAFKA_AUTO_CREATE_TOPICS
            value: "false"
          - name: KAFKA_JMX
            value: "true"
          - name: KAFKA_TOPIC_CONFIG
            value: {{ .Values.topic_config | quote }}
          - name: KAFKA_CREATE_TOPICS
            value: "\
              metrics:64:1,\
              alarm-state-transitions:12:1,\
              alarm-notifications:12:1,\
              retry-notifications:3:1,\
              events:12:1,\
              60-seconds-notifications:3:1"
        command:
        - sh
        - -c
        - "./start.sh"
        volumeMounts:
        - name: datadir
          mountPath: "/data"
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: "{{ .Values.persistence.storageClass }}"
    spec:
      accessModes: [ "{{ .Values.persistence.accessMode }}" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
